@using DOMAIN.Models
@model IEnumerable<DOMAIN.Models.Borrowing>

@{
    ViewData["Title"] = "OverDue Issuance";

    PaginationModel pager = new PaginationModel();

    int PageNo = 0;

    if(ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        PageNo = pager.CurrentPage;
    }
}

<div class="container-fluid">
    <p class="display-6">BOOKS' OVERDUE ISSUANCE</p>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8">
                <form method="get" class="row" asp-controller="Borrowing" asp-action="OverDue">
                    <div class="col-md-3">
                        <label class="col-form-label">Book Serial No.</label>
                    </div>
                    <div class="col-md-7">
                        <input type="text" name="BookSerialNo" class="form-control" required />
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary mb-3">Search</button>
                    </div>

                </form>
            </div>
            <div class="col-md-3 offset-1 justify-content-end">
                <a asp-controller="Report" asp-action="OverDueReport" class="btn btn-warning"> <i class="fas fa-expand px-1" aria-hidden="true"></i>Export To CSV</a>
            </div>

           

        </div>

    </div>
    <hr />
    <table class="table ">
        <thead class="table-head">
            <tr style="font-size:11px;">
                <th>#</th>
                <th>
                    @Html.DisplayNameFor(model => model.RegisterDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IssuedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentStudent.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentStudent.AdminNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentBook.Subject)
                </th>
                 <th>
                    @Html.DisplayNameFor(model => model.CurrentStudent.Form.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentBook.SerialNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Issued)
                </th>
                <th>@Html.DisplayNameFor(model => model.ReturnDate)</th>
                <th></th>
            </tr>
        </thead>
        <tbody class="table-body">
            @if (Model != null)
            {
                int counter = 1;
                foreach (var item in Model)
                {
                    var tm = "#myModal" + item.Id;
                    var mid = "myModal" + item.Id;
                    <tr style="font-size:11px;">
                        <td>@counter</td>
                        <td>
                            <p class="btn-secondary p-2">@Html.DisplayFor(modelItem => item.RegisterDate)</p>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IssuedBy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CurrentStudent.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CurrentStudent.AdminNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CurrentBook.Subject)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CurrentBook.Form.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CurrentBook.SerialNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Issued)
                        </td>
                        <td>
                            <p class="btn-danger p-2">@Html.DisplayFor(modelItem => item.ReturnDate)</p>
                        </td>
                        <td>
                            <a asp-controller="Borrowing" asp-action="OverDueDetails" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                        </td>
                    </tr>
                    counter++;
                }
            }
        </tbody>
    </table>
    <partial name="_PagerOverDue" model="@pager" />
</div>


